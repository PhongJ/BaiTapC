1. Viết một chương trình để nhập vào hai chuỗi. Chương trình sẽ xác định liệu chuỗi thứ nhất có xuất hiện ở cuối chuỗi thứ hai không.
2. Viết một chương trình nhập vào một mảng các số và hiển thị giá trị trung bình. Sử dụng hàm để tính giá trị trung bình.

1. Viết chương trình C để nhập vào 5 tên và một chức danh. Chèn chức danh đó vào phần đầu mỗi tên trong mảng. Hiển thị các tên đã sửa đổi
2. Viết một chương trình C nhập vào nhiệt độ trung bình hằng năm của 5 năm qua cho 5 thành phố. Hiển thị nhiệt độ lớn nhất và nhỏ nhất của mỗi thành phố. Sử dụng hàm để xác định các nhiệt độ lớn nhất và nhỏ nhất.

1. Viết một chương trình C để lưu trữ các tên và điểm số của 5 sinh viên trong một mảng cấu trúc. Hãy sắp xếp mảng cấu trúc theo thứ tự điểm số giảm dần. Hiển thị 3 điểm số cao nhất.
2. Viết một chương trình C để lưu trữ các tên và điểm số của 5 sinh viên trong một mảng cấu trúc. Hãy sắp xếp mảng cấu trúc theo thứ tự điểm số giảm dần. Hiển thị 3 điểm số cao nhất.

1. Viết một chương trình để nhập dữ liệu vào một tập tin và in nó theo thứ tự ngược lại.
2. Viết một chương trình để truyền dữ liệu từ một tập tin này sang tập tin khác, loại bỏ tất cả các nguyên âm (a, i , u, e, o). Loại bỏ các nguyên âm ở dạng chữ hoa lẫn chữ thường. Hiển thị nội dung của tập tin mới.

1. Viết một chương trình C để lưu trữ 5 dộ dài trong một mảng cấu trúc. Mỗi độ dài phải bao gồm 3 thông tin về yards, feet và inches. Sắp xếp và hiển thị các độ dài.
2. Viết một chương trình C để lưu trữ thông tin chi tiết của nhân viên trong một mảng cấu trúc. Thông tin của một nhân viên phải bao gồm mã nhân viên, tên, lương và ngày vào làm. Ngày vào làm phải được lưu trong một cấu trúc khác. Chương trình phải thực hiện các thao tác sau đây dựa trên sự lựa chọn trong menu các chức năng của chương trình:
a. Tăng lương theo các luật sau
	Salary Range		Percentage increase
	<=2000				15%
	>2000 and <=5000	10%
	>5000				No increase
b. Hiển thị thông tin chi tiết của các nhân viên đã làm việc trong công ty từ 10 năm trở lên.

1. Viết một chương trình C để sao chép nội dung của một tập tin khác loại trừ các từ a, an, the.
2. Viết một chương trình C để nhập vào hai chuỗi số. Lưu mỗi chuỗi ở hai tập tin riêng biệt. Sắp xếp chuỗi trong mỗi tập tin. Trộn 2 chuỗi vào một, sắp xếp và lưu lại chuỗi kết quả vào một tập tin mới. Hiển thị nội dung của tập tin mới.

struct book_st {
	int book_cd;
	char book_nm[30];
	char author[30];
	int copies;
}

struct date_st {
	int month;
	int day;
	int year;
}

struct tran_st
{
	int book_code;
	char tran_type;
	struct date_st tran_dt;
}

void main()
{
	int choice = 1, i;
	char addflag;
	struct book_st books[5];
	struct tran_st trans[10];

	while (choice != 4)
	{
		printf("\nSelect from Menu\n1.Add book names\n2.Record Issue/Return\n3.Sort transactions\n4.Exit\n\nEnter choice: ");
		scanf("%d", &choice)

		if (choice == 1)
		{
			addflag = 'y';

			for (i = 0; i < 5 && addflag == 'y'; ++i)
			{
				books[i].book_cd = i + 1;
				printf("\n\nBook code: %d\n\nBook name: ", i+1);
				scanf("%s", books[i].book_nm);
				printf("\nAuthor: ");
				scanf("%s", books[i].author);
				printf("\nNumber of copies: ");
				scanf("%d", &books[i].copies);
				printf("\n\nContinuew? (y/n): ");
				scanf("%c", &addflag);

			}
		}
		else if (choice == 2)
		{
			addflag = 'y';

			for (i = 0; i < 10 && addflag == 'y'; ++i)
			{
				
				printf("\n\nBook code: );
				scanf("%d", &trans[i].book_code);
				printf("\nAuthor: ");
				scanf("%s", books[i].author);
				printf("\nNumber of copies: ");
				scanf("%d", &books[i].copies);
				printf("\n\nContinuew? (y/n): ");
				scanf("%c", &addflag);

			}
		}
	}
}

























